AWSTemplateFormatVersion: '2010-09-09'
Description: Deploys OpenGovernance Platform to AWS Organization

Parameters:
  IAMUsernameInOrganizationAccount:
    Type: String
    Default: OpenGovernanceIAMUser
    Description: IAM User to create
  IAMGroupnameInOrganizationAccount:
    Type: String
    Default: OpenGovernanceIAMGroup
    Description: IAM Group to create
  RoleNameInAccount:
    Type: String
    Default: OpenGovernanceReadOnly
    Description: The name of the role that will be assumed in each member account.
  AccountList:
    Type: String
    Default: ""
    Description: Comma-separated list of Accounts to deploy the stackset to.
  OrganizationUnitList:
    Type: String
    Default: ""
    Description: Comma-separated list of OUs to deploy the stackset to.

Conditions:
  OUs: !Not [ !Equals [ !Ref OrganizationUnitList, '' ] ]
  Accounts: !Not [ !Equals [ !Ref AccountList, '' ] ]

Resources:
  # IAM Role in the Management Account
  OrganizationRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Ref RoleNameInAccount
      Description: Allows the platform to gather inventory of the organization and member accounts
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub '${AWS::AccountId}'
            Action:
              - 'sts:AssumeRole'
              - 'sts:TagSession'
      Policies:
        - PolicyName: OpenGovernanceRoleAssumption
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'organizations:List*'
                  - 'sts:AssumeRole'
                Resource: '*'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/SecurityAudit
        - arn:aws:iam::aws:policy/ReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSOrganizationsReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSBillingReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSSSODirectoryReadOnly
        - arn:aws:iam::aws:policy/AWSSSOReadOnly
        - arn:aws:iam::aws:policy/IAMAccessAdvisorReadOnly
        - arn:aws:iam::aws:policy/IAMAccessAnalyzerReadOnlyAccess

  # IAM User in the Management Account
  IAMUserInOrganizationAccount:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: !Ref IAMUsernameInOrganizationAccount

  # IAM Group in the Management Account
  IAMGroupInOrganizationAccount:
    Type: 'AWS::IAM::Group'
    Properties:
      GroupName: !Ref IAMGroupnameInOrganizationAccount

  # Add IAM User to IAM Group
  AddOrganizationUserToOrganizationGroup:
    Type: 'AWS::IAM::UserToGroupAddition'
    Properties:
      Users:
        - !Ref IAMUserInOrganizationAccount
      GroupName: !Ref IAMGroupnameInOrganizationAccount
    DependsOn: IAMGroupInOrganizationAccount

  # Attach Policy to IAM Group to Allow AssumeRole on Member and Additional Roles
  AttachRoleToOrganizationGroup:
    Type: 'AWS::IAM::GroupPolicy'
    Properties:
      PolicyName: OpenGovernanceAllowRoleAssumption
      GroupName: !Ref IAMGroupnameInOrganizationAccount
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - 'sts:AssumeRole'
            Resource:
              - !Sub 'arn:aws:iam::*:role/${RoleNameInAccount}'
              - !Sub 'arn:aws:iam::*:role/OpenGovernanceSecurity'
              - !Sub 'arn:aws:iam::*:role/OpenGovernanceReader'
              - !Sub 'arn:aws:iam::*:role/OpenGovernanceSSO'
              - !Sub 'arn:aws:iam::*:role/OpenGovernanceOrganizationReader'
    DependsOn: IAMGroupInOrganizationAccount

  # Define Security Role
  OpenGovernanceSecurityRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: OpenGovernanceSecurity
      Description: Security access role for OpenGovernance
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:user/${IAMUsernameInOrganizationAccount}"
            Action:
              - 'sts:AssumeRole'
              - 'sts:TagSession'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/SecurityAudit

  # Define Reader Role
  OpenGovernanceReaderRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: OpenGovernanceReader
      Description: Reader access role for OpenGovernance
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:user/${IAMUsernameInOrganizationAccount}"
            Action:
              - 'sts:AssumeRole'
              - 'sts:TagSession'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess

  # Define SSO Role
  OpenGovernanceSSORole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: OpenGovernanceSSO
      Description: SSO access role for OpenGovernance
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:user/${IAMUsernameInOrganizationAccount}"
            Action:
              - 'sts:AssumeRole'
              - 'sts:TagSession'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSSSOReadOnly

  # Define Organization Reader Role
  OpenGovernanceOrganizationReaderRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: OpenGovernanceOrganizationReader
      Description: Organization Reader access role for OpenGovernance
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:user/${IAMUsernameInOrganizationAccount}"
            Action:
              - 'sts:AssumeRole'
              - 'sts:TagSession'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSOrganizationsReadOnlyAccess

  # StackSet to Deploy Roles to Member Accounts
  MemberAccountRoleStackSet:
    Type: 'AWS::CloudFormation::StackSet'
    Properties:
      StackSetName: OpenGovernanceMemberAccountRollout
      Description: Stack Set that will roll out to member accounts
      Capabilities:
        - CAPABILITY_NAMED_IAM
      AutoDeployment:
        Enabled: true
        RetainStacksOnAccountRemoval: false
      PermissionModel: SERVICE_MANAGED
      OperationPreferences:
        ConcurrencyMode: SOFT_FAILURE_TOLERANCE
        MaxConcurrentCount: 15
        FailureTolerancePercentage: 100
      StackInstancesGroup:
        - DeploymentTargets: 
            Accounts: !If [Accounts, !Split [ ",", !Ref AccountList ], !Ref AWS::NoValue]
            OrganizationalUnitIds: !If [OUs, !Split [ ",", !Ref OrganizationUnitList ], !Ref AWS::NoValue]
          Regions: 
            - !Ref AWS::Region
      ManagedExecution:
        Active: true
      Parameters: 
        - ParameterKey: OrganizationIAMUserArn
          ParameterValue: !Sub "arn:aws:iam::${AWS::AccountId}:user/${IAMUsernameInOrganizationAccount}"
        - ParameterKey: MemberAccountRoleName
          ParameterValue: !Ref RoleNameInAccount
      TemplateBody: |
        {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "Create reader roles in member accounts.",
          "Parameters": {
              "OrganizationIAMUserArn": {
                  "Type": "String",
                  "Description": "The IAM User ARN that is allowed to assume the role."
              },
              "MemberAccountRoleName": {
                  "Type": "String",
                  "Description": "The name of the role that will be deployed in each member account."
              }
          },
          "Resources": {
              "OpenGovernance": {
                  "Type": "AWS::IAM::ManagedPolicy",
                  "Properties": {
                      "ManagedPolicyName": "OpenGovernancePolicy",
                      "Description": "A Limited policy to allow cloudquery to do its job",
                      "PolicyDocument": {
                          "Version": "2012-10-17",
                          "Statement": [
                              {
                                  "Effect": "Deny",
                                  "Resource": "*",
                                  "Action": [
                                      "cloudformation:GetTemplate",
                                      "dynamodb:GetItem",
                                      "dynamodb:BatchGetItem",
                                      "dynamodb:Query",
                                      "dynamodb:Scan",
                                      "ec2:GetConsoleOutput",
                                      "ec2:GetConsoleScreenshot",
                                      "ecr:BatchGetImage",
                                      "ecr:GetAuthorizationToken",
                                      "ecr:GetDownloadUrlForLayer",
                                      "kinesis:Get*",
                                      "lambda:GetFunction",
                                      "logs:GetLogEvents",
                                      "s3:GetObject",
                                      "sdb:Select*",
                                      "sqs:ReceiveMessage"
                                  ]
                              }
                          ]
                      }
                  }
              },
              "MemberAccountReadOnlyRole": {
                  "Type": "AWS::IAM::Role",
                  "Properties": {
                      "RoleName": { "Ref" : "MemberAccountRoleName" },
                      "Description": "Read Only Access to fetch inventory from member accounts",
                      "ManagedPolicyArns": [
                          {
                              "Ref": "OpenGovernance"
                          },
                          "arn:aws:iam::aws:policy/ReadOnlyAccess",
                          "arn:aws:iam::aws:policy/SecurityAudit",
                          "arn:aws:iam::aws:policy/AWSOrganizationsReadOnlyAccess",
                          "arn:aws:iam::aws:policy/AWSBillingReadOnlyAccess",
                          "arn:aws:iam::aws:policy/IAMAccessAnalyzerReadOnlyAccess",
                          "arn:aws:iam::aws:policy/IAMAccessAdvisorReadOnly"
                      ],
                      "MaxSessionDuration": 28800,
                      "AssumeRolePolicyDocument": {
                          "Version": "2012-10-17",
                          "Statement": [
                              {
                                  "Effect": "Allow",
                                  "Principal": {
                                      "AWS": {
                                          "Fn::Sub": "${OrganizationIAMUserArn}"
                                      }
                                  },
                                  "Action": [
                                      "sts:AssumeRole",
                                      "sts:TagSession"
                                  ]
                              }
                          ]
                      }
                  }
              }
          }
        }

Outputs:
  CFNOrganizationRoleArn:
    Description: Organization Role ARN.
    Value: !GetAtt OrganizationRole.Arn

  AccessKeyId:
    Description: Name of the IAM User.
    Value: !Ref IAMUsernameInOrganizationAccount

  OrganizationIAMUserArn:
    Description: ARN of the IAM User in the Organization Account.
    Value: !Sub "arn:aws:iam::${AWS::AccountId}:user/${IAMUsernameInOrganizationAccount}"
